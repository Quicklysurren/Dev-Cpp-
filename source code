#include <GL/glut.h>  

static float angle = 0.0;

void init() {
    glClearColor(0.0, 0.0, 0.0, 0.0);  
    glShadeModel(GL_FLAT); 
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);  
    glPushMatrix(); 
    
    glRotatef(angle, 0.0, 1.0, 0.0);  
    glutWireTeapot(0.5); 

    glPopMatrix();  
    glutSwapBuffers(); 
}

void reshape(int w, int h) {
    glViewport(0, 0, (GLsizei)w, (GLsizei)h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(60.0, (GLfloat)w / (GLfloat)h, 1.0, 20.0);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    glTranslatef(0.0, 0.0, -5.0);
}

void timer(int value) {
    angle += 2.0;  
    if (angle > 360.0) angle -= 360.0;
    glutPostRedisplay();  
    glutTimerFunc(16, timer, 0);  
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Rotating Teapot");
    init();
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutTimerFunc(0, timer, 0);
    glutMainLoop();
    return 0;
}
